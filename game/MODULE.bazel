###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

module(
    name = "the-game",
    repo_name = "the-game",
)

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "1e08f8e0507b6b6b1f4416a9a22cf5c28beaba93",
)

bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_foreign_cc", version = "0.12.0")
bazel_dep(name = "nlohmann_json", version = "3.11.3")
bazel_dep(name = "rules_pkg", version = "0.10.1")

# Makes @boost available for use: For example, add `@boost//:algorithm` to your deps.
# For more, see https://github.com/nelhage/rules_boost and https://www.boost.org
bazel_dep(name = "rules_boost", repo_name = "com_github_nelhage_rules_boost")
archive_override(
    module_name = "rules_boost",
    urls = "https://github.com/nelhage/rules_boost/archive/58be4e7e851d19e9ba14ced7bdba6fc8895af1d3.zip",
    strip_prefix = "rules_boost-58be4e7e851d19e9ba14ced7bdba6fc8895af1d3",
    # It is recommended to edit the above URL and the below sha256 to point to a specific version of this repository.
    integrity = "sha256-L/OrK2IF3FL5+pddXmt5XmVH9mZT0+zca/SMp//Y++4=",
)

non_module_boost_repositories = use_extension("@com_github_nelhage_rules_boost//:boost/repositories.bzl", "non_module_dependencies")
use_repo(
    non_module_boost_repositories,
    "boost",
)

# Google testing framework
bazel_dep(name = "googletest", version = "1.15.0")

# A C++11 single-file header-only cross platform HTTP/HTTPS library.
# https://github.com/yhirose/cpp-httplib/
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "cpp_httplib",
    urls = ["https://github.com/yhirose/cpp-httplib/archive/refs/tags/v0.16.0.tar.gz"],
    strip_prefix = "cpp-httplib-0.16.0",
    build_file = "//support/third-party:cpp_httplib.BUILD",
)
